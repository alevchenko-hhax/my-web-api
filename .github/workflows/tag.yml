name: Build Image
on:
  push:
    branches:
    - 'main'
    - 'release/**'

  pull_request:
    types:
      - closed
    branches:
    - 'main'
    - 'release/**'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest    
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0     

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0
      with:
        useConfigFile: true

    - run: |        
        echo "${{ env.GitVersion_MajorMinorPatch }}"
        echo "${{ env.GitVersion_ShortSha }}"
        echo "${{ github.event.pull_request.head.ref }}"
      name: Use variables and output

    
    - name: Extract Jira ticket and assign Tag variable
      id: jira
      run: |
        minor_ver=$(printf "%02d" ${{env.GitVersion_Minor}})
        patch_ver=$(printf "%02d" ${{env.GitVersion_Patch}})
        current_ver="${{env.GitVersion_Major}}.${minor_ver}.${patch_ver}"

        if [[ "${{ github.event.pull_request.head.ref }}" =~ PLAT-([0-9]+) ]]; then
          echo "tag_name=${current_ver}-${{ env.GitVersion_CommitsSinceVersionSourcePadded }}-PLAT-${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=${current_ver}-${{ env.GitVersion_CommitsSinceVersionSourcePadded }}"  >> $GITHUB_OUTPUT
        fi
          
    - name: Check Tag exists
      run: |
          git fetch --tags
          if git rev-parse --verify --quiet ${{ steps.jira.outputs.tag_name }}; then
            echo "Tag already exists.Finishing."
            exit 0
          fi
            
    - name: Create tag
      uses: actions/github-script@v5
      with:
        script: |
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ steps.jira.outputs.tag_name }}',
                sha: context.sha
              })

